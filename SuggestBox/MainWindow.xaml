<Window x:Class="SuggestBox.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SuggestBox"
         mc:Ignorable="d" Loaded="MainWindow_OnLoaded"
        Title="MainWindow" Height="550" Width="525" LocationChanged="MainWindow_OnLocationChanged">
    <Window.Resources>
        <Style TargetType="{x:Type Button}" x:Key="rightButton">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="10" />
            <!--<Setter Property="FontSize" Value="20" />
            <Setter Property="Foreground" Value="White" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" CornerRadius="3,13,3,13" Padding="{TemplateBinding Padding}">
                            <Border.Background>
                                <SolidColorBrush Color="#FF6C6C6C" />
                            </Border.Background>
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontSize="20" TextElement.Foreground="White" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF518CB1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="content" Property="TextElement.Foreground" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
            <!--<Setter Property="Margin" Value="5" />-->
            <!--<Setter Property="FontSize" Value="20" />-->
            <!--<Setter Property="Foreground" Value="White" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" CornerRadius="4" Background="Transparent"  Padding="10,2" x:Name="PART_Background">
                            <ContentPresenter x:Name="PART_Content" VerticalAlignment="Center" TextElement.Foreground="Black" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="PART_Background" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFC547" Offset="1"/>
                                            <GradientStop Color="#FFF77202"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Content" Property="TextElement.Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="230"/>
                <ColumnDefinition Width="*"/>
                
            </Grid.ColumnDefinitions>
            <Grid Column="0" ZIndex="1000">
                <local:SearchVisual x:Name="SearchControl"></local:SearchVisual>
            </Grid>
        </Grid>
        <Grid Row="1" ZIndex="1000">
            <local:KeyWords x:Name="KeyWords"></local:KeyWords>
        </Grid>
        <Grid Row="2">
            <Button Click="ButtonBase_OnClick" Width="50">Test</Button>
        </Grid>
        <Grid Row="3">
            <StackPanel Orientation="Vertical">
                <TextBox x:Name="text" Width="50" />
                <!--<TextBox Text="Another Text Box" />-->
                <Popup PlacementTarget="{Binding ElementName=text}">
                    <Popup.Style>
                        <Style TargetType="{x:Type Popup}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=text, Path=IsFocused}" Value="True">
                                    <Setter Property="IsOpen" Value="True" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=popupText, Path=IsFocused}" Value="True">
                                    <Setter Property="IsOpen" Value="True" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Popup.Style>
                    <TextBox x:Name="popupText" Text="HELLO WORLD"  />
                </Popup>
            </StackPanel>
            <!--<DockPanel DockPanel.Dock="Right" Margin="0,40,0,0" Width="120" LastChildFill="False">
                <Button x:Name="btnShow" Content="Show" DockPanel.Dock="Top" Margin="0,40,0,0" Click="btnShow_Click"  Style="{StaticResource ResourceKey=rightButton}" />
                <RadioButton x:Name="btnTerminalNo" DockPanel.Dock="Top" Margin="0,40,0,0"  Style="{StaticResource RadioButtonStyle}">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="终端编号" FontSize="20" TextAlignment="Center"/>
                        <Popup StaysOpen="False" DockPanel.Dock="Bottom" IsOpen="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton, AncestorLevel=1}}" PopupAnimation="Scroll"  AllowsTransparency="True">
                            <Border Background="White" BorderBrush="Black" BorderThickness="1" Padding="4" Width="360" Height="280">
                                <local:NumericKeyboard HasMaxValue="True" MaxValue="9999" IsChecked="{Binding Path=IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton, AncestorLevel=1}, Mode=TwoWay}" Value="{Binding Path=TerminalNo, Mode=TwoWay}" />
                            </Border>
                        </Popup>
                        <Border Background="Gray"  CornerRadius="5" BorderBrush="Black" BorderThickness="2" Padding="5" Margin="0,0,0,5" HorizontalAlignment="Stretch">
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontWeight="Bold" FontSize="32" Text="{Binding Path=TerminalNo}" />
                        </Border>
                    </StackPanel>
                </RadioButton>
            </DockPanel>-->
        </Grid>
        
    </Grid>
</Window>
